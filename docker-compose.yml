version: '3.8'

services:
  producer:
    container_name: producer
    build:
      dockerfile: Dockerfile
      context: producer
    depends_on:
      - rabbitmq
    environment:
      PRODUCER_RABBIT_HOST: "host.docker.internal"
    networks:
      - sternx-net

  worker-0:
    container_name: worker-0
    build:
      dockerfile: Dockerfile
      context: worker
    depends_on:
      - rabbitmq
      - producer
    ports:
      - "8080:8080"
    environment:
      WORKER_SERVER_HOST: "0.0.0.0"
      WORKER_SERVER_PORT: "8080"
      WORKER_WORKER_QUEUENAME: "worker-queue-0"
      WORKER_RABBIT_HOST: "host.docker.internal"
    networks:
      - sternx-net

  worker-1:
    container_name: worker-1
    build:
      dockerfile: Dockerfile
      context: worker
    depends_on:
      - rabbitmq
      - producer
    ports:
      - "8081:8081"
    environment:
      WORKER_SERVER_HOST: "0.0.0.0"
      WORKER_SERVER_PORT: "8081"
      WORKER_WORKER_QUEUENAME: "worker-queue-1"
      WORKER_RABBIT_HOST: "host.docker.internal"
    networks:
      - sternx-net

  worker-2:
    container_name: worker-2
    build:
      dockerfile: Dockerfile
      context: worker
    depends_on:
      - rabbitmq
      - producer
    ports:
      - "8082:8082"
    environment:
      WORKER_SERVER_HOST: "0.0.0.0"
      WORKER_SERVER_PORT: "8082"
      WORKER_WORKER_QUEUENAME: "worker-queue-2"
      WORKER_RABBIT_HOST: "host.docker.internal"
    networks:
      - sternx-net


  distributor:
    container_name: distributor
    build:
      dockerfile: Dockerfile
      context: distributor
    depends_on:
      - rabbitmq
      - producer
    environment:
      DISTRIBUTOR_DISTRIBUTOR_WORKERS: 3
      DISTRIBUTOR_RABBIT_HOST: "host.docker.internal"
    networks:
      - sternx-net


  rabbitmq:
    image: rabbitmq:management
    ports:
      - "15672:15672"  # RabbitMQ Management Console
      - "5672:5672"
    networks:
      - sternx-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus-ws
    ports:
      - "9090:9090"
    volumes:
      - ./worker/development/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - sternx-net

  grafana:
    image: grafana/grafana
    container_name: grafana-ws
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
    volumes:
      - ./worker/development/grafana:/etc/grafana/provisioning
    networks:
      - sternx-net

networks:
  sternx-net:
    driver: bridge
